{"version":3,"sources":["Components/ITManPlayer.js","Components/Player.jsx","App.js","serviceWorker.js","index.js"],"names":["ITManPlayer","props","player","React","createRef","state","video_url","src","className","data-setup","ref","this","prevProps","prevState","setState","console","log","video","sources","videoNode","current","window","videojs","type","controls","fluid","eventON","Object","keys","forEach","item","on","dispose","Component","Player","getCookie","key","name","ca","document","cookie","split","i","length","c","trim","indexOf","substring","setCookie","d","Date","setTime","getTime","expires","toGMTString","d1","String","userID","videoPlay","updateEvents","process","currentTime","play","audioplayer","videoPause","pause","videoSeek","paused","volumechange","volume","muted","videoWait","videoContinue","action","ret","actionType","time","events","sendLog","axios","post","data","headers","then","res","catch","err","audio_url","loaded","fetchcount","fetchVideo","bind","video_path","match","params","ix","get","v","a","clearTimeout","timeoutId","clearInterval","interrvalId","ck","videoFetchInterval","setInterval","videoFetchTimeout","setTimeout","alert","seeked","waiting","canPlay","aud","App","basename","path","render","Boolean","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6f10c88e.chunk.js","sourcesContent":["// ITManPlayer.js\nimport React, { Component } from \"react\";\n\nclass ITManPlayer extends Component {\n  constructor(props) {\n    super(props);\n    this.player = React.createRef();\n    this.state = {\n        video_url: this.props.src\n    }\n  }\n  \n  render() {\n    return (\n      <video\n        className=\"video-js vjs-big-play-centered\"\n        data-setup=\"{}\"\n        ref={this.player}\n      />\n    );\n  }\n  \n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.src !== prevProps.src){\n            this.setState({video_url: this.props.src});\n            console.log(this.video.sources);\n        }\n    }\n\n  componentDidMount() {\n    const videoNode = this.player.current;\n    this.video = window.videojs(videoNode,{\n        sources: [{\n            src: this.state.video_url,\n            type: \"video/webm\",\n        }],\n        controls: true,\n        fluid:true,\n\n    });\n    console.log(this.props);\n    let { eventON } = this.props;\n    if(eventON){\n        Object.keys(eventON).forEach(item => {\n          this.video.on(item, () => {\n          eventON[item]()\n          });\n        });\n      }\n  }\n  \n  componentWillUnmount() {\n      if (this.video) {\n          this.video.dispose();\n      }\n  }\n}\n\nexport default ITManPlayer;","import ITManPlayer from './ITManPlayer';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Player extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            video_url: '',\n            audio_url: '',\n            loaded: false,\n            fetchcount: 0,\n            events: [],\n            }\n        this.fetchVideo = this.fetchVideo.bind(this);\n        this.updateEvents = this.updateEvents.bind(this);\n        this.getCookie = this.getCookie.bind(this);\n        this.setCookie = this.setCookie.bind(this);\n        this.sendLog = this.sendLog.bind(this)\n    }\n\n    fetchVideo(){\n        if (this.state.loaded == true){\n            return;\n        }\n        let video_path = `http://localhost:4000/mitm/download/${this.props.match.params.ix}.json`;\n        // console.log(video_path);\n        axios.get(video_path)\n        .then( res => { \n            console.log(res.data);\n            const data = res.data;\n            console.log(data);\n            const video_url = data.v;\n            const audio_url = data.a;\n            if (video_url && audio_url) {\n                this.setState({\n                    audio_url: audio_url,\n                    video_url: video_url,\n                    loaded: true,\n                });\n                clearTimeout(this.state.timeoutId);\n                clearInterval(this.state.interrvalId);\n            }\n        }\n            \n\n        ).catch(err => {\n            console.log(err);\n        })\n\n    }\n\n    getCookie = (key) =>  {\n        const name = key + \"=\";\n        const ca = document.cookie.split(';');\n        for (let i = 0; i < ca.length; i++) {\n            const c = ca[i].trim();\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n        return \"\";\n    }\n\n\n    setCookie = (key) => {\n        const d = new Date();\n        d.setTime(d.getTime() + (30 * 24 * 60 * 60 * 1000));\n        const expires = \"expires=\" + d.toGMTString();\n        const d1 = new Date().getTime();\n        document.cookie = key + \"=\" + String(d1) + \"; \" + expires;\n        this.setState({userID: expires});\n    }\n\n    componentDidMount(){\n        // this.fetchVideo()\n        const ck = this.getCookie('mitm');\n        if (!ck) this.setCookie('mitm')\n        else this.setState({userID: ck});\n        let videoFetchInterval = setInterval(this.fetchVideo, 2000);\n        this.setState({interrvalId: videoFetchInterval});\n        let videoFetchTimeout = setTimeout(()=>{alert(\"Source not found\");}, 30000);\n        this.setState({timeoutId: videoFetchTimeout});\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.state.interrvalId);\n        this.sendLog();\n    }\n\n    videoPlay = () =>{\n        this.updateEvents({type: \"play\", process: this.ITManPlayer.video.currentTime()});\n        this.ITManPlayer.video.play();\n        this.audioplayer.play();\n      }\n    videoPause= () =>{\n        this.updateEvents({type: \"pause\", process: this.ITManPlayer.video.currentTime()});\n        this.ITManPlayer.video.pause();\n        this.audioplayer.pause();\n    }\n    videoSeek = () =>{\n        this.audioplayer.currentTime = this.ITManPlayer.video.currentTime();\n        if (!this.ITManPlayer.video.paused()){\n            this.audioplayer.play();\n        }\n    }\n    volumechange = () => {\n        this.audioplayer.volume = this.ITManPlayer.video.volume();\n        this.audioplayer.muted = this.ITManPlayer.video.muted();\n    }\n\n    videoWait = () => {\n        this.updateEvents({type: \"wait\", process: this.ITManPlayer.video.currentTime()});\n        this.audioplayer.pause();\n    }\n\n    videoContinue = () => {\n        this.updateEvents({type: \"buffer complete\", process: this.ITManPlayer.video.currentTime()});\n        if (!this.ITManPlayer.video.paused()){\n            this.audioplayer.play();\n        }   \n    }\n\n\n    updateEvents = (action) => {\n        // console.log(action);\n        let ret = {}\n        ret.actionType = action.type;\n        ret.time = new Date().getTime();\n        ret.process = action.process;\n        console.log(ret);\n        this.setState({ events: [...this.state.events, ret] });\n    }\n\n    sendLog = () => {\n        axios.post(\"http://204.44.88.11:6543/\",{\n            data: this.state.events,\n            userID: this.state.userID\n        },  {headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }\n        })\n        .then(res => console.log(res))\n        .catch(err => console.log(err));\n    }\n\n    render(){\n        if (this.state.video_url !== \"\" && this.state.audio_url !== \"\")\n        return (\n            <div className=\"wrap\">\n              <ITManPlayer \n              ref={player => (this.ITManPlayer = player)}\n              src = {this.state.video_url}\n              eventON={{\n                pause: () => {\n                  console.log(\"Pause\");\n                  {this.videoPause()}\n                },\n                play: () => {\n                  console.log(\"Play\");\n                  {this.videoPlay()}\n                },\n                seeked: () => {\n                    {this.videoSeek()}\n                    console.log(\"Seeked\");\n                  },\n                volumechange: () => {\n                    {this.volumechange()}\n                    console.log(\"volumechange\");\n                },\n                waiting: () => {\n                    console.log(\"buffering\");\n                    {this.videoWait()};\n                },\n                canPlay: () => {\n                    console.log(\"buffer complete\");\n                    {this.videoContinue()}\n                }\n                \n              }}\n              />\n\n              {/* <button onClick={this.videoPlay}>Play</button>\n              <button onClick={this.videoPause}>Pause</button> */}\n              <audio ref={aud =>(this.audioplayer = aud)} src={this.state.audio_url} type=\"audo/mp4\"></audio>\n            </div>\n          );\n\n          else{\n              return <div>\n                  <h1>Loading</h1>\n              </div>\n          }\n    }\n\n}\n\n\nexport default Player","// App.js\n\nimport React, { Component } from 'react';\nimport Player from './Components/Player.jsx'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\n\nclass App extends Component {\n  render() {\n    console.log(process.env.PUBLIC_URL);\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          {/* <Route path = \"/\" component = {Player}></Route> */}\n          <Route path=\"/:ix\"  render={(props) => (<Player key={props.match.params.ix} {...props} />) }/>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}